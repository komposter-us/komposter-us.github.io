{
    "env": {
        "browser": true,
        "es6": true,
        "node": true
    },
    "globals": {
        "window": true,
        "ActiveXObject": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:import/errors",
        "plugin:import/warnings",
        "plugin:import/typescript",
        "plugin:unicorn/recommended",
        "plugin:jest/recommended"
    ],
    "plugins": [
        "import",
        "unicorn",
        "jest"
    ],
    "rules": {
        "quotes": ["error", "double", {
            "avoidEscape": true
        }],
        "semi": ["error", "always", {
            "omitLastInOneLineBlock": true
        }],
        "indent": ["error", 4, {
            "SwitchCase": 1
        }],
        "no-empty": ["error", {
            "allowEmptyCatch": true
        }],
        "unicorn/no-fn-reference-in-iterator": "warn",
        "unicorn/no-abusive-eslint-disable": "warn",
        "unicorn/prefer-ternary": "off",
        "unicorn/no-useless-undefined": "warn",
        "unicorn/prevent-abbreviations": "off",
        "unicorn/catch-error-name": "off",
        "unicorn/explicit-length-check": "off",
        "unicorn/no-null": "warn"
    },
    "overrides": [{
        "files": ["*.ts"],
        "extends": [
            // Базовый набор правил eslint
            "eslint:recommended",
            // Отключаем правила из базового набора
            //"plugin:@typescript-eslint/eslint-recommended",
            // Базовые правила для TypeScript
            "plugin:@typescript-eslint/recommended",
            // Правила TS, требующие инфо о типах
            "plugin:@typescript-eslint/recommended-requiring-type-checking",
            "plugin:import/errors",
            "plugin:import/warnings",
            "plugin:import/typescript",
            "plugin:unicorn/recommended",
            "plugin:jest/recommended"
        ],
        "parser": "@typescript-eslint/parser",
        "parserOptions": {
            "project": "tsconfig.json",
            "sourceType": "module"
        },
        "plugins": [
            "@typescript-eslint",
            "@typescript-eslint/tslint",
            "import",
            "unicorn",
            "jest"
        ],
        "rules": {
            "quotes": ["error", "double", {
                "avoidEscape": true
            }],
            "semi": ["error", "always", {
                "omitLastInOneLineBlock": true
            }],
            "indent": ["error", 4, {
                "SwitchCase": 1
            }],
            "no-empty": ["error", {
                "allowEmptyCatch": true
            }],
            "unicorn/no-fn-reference-in-iterator": "warn",
            "unicorn/no-abusive-eslint-disable": "warn",
            "unicorn/prefer-ternary": "off",
            "unicorn/no-useless-undefined": "warn",
            "unicorn/prevent-abbreviations": "off",
            "unicorn/catch-error-name": "off",
            "unicorn/explicit-length-check": "off",
            "unicorn/no-null": "warn",

            "@typescript-eslint/ban-ts-comment": "warn",
            //"@typescript-eslint/naming-convention": "off",
            "@typescript-eslint/restrict-plus-operands": "off",
            "@typescript-eslint/restrict-template-expressions": "warn",
            "@typescript-eslint/no-use-before-define": "off", // ["error", { "functions": false }],
            "@typescript-eslint/prefer-regexp-exec": "warn",
            "@typescript-eslint/explicit-function-return-type": "off",
            "@typescript-eslint/no-unsafe-member-access": "warn",
            "@typescript-eslint/explicit-module-boundary-types": "off",
            "@typescript-eslint/ban-types": ["warn", {
                "types": {
                    "Function": true
                }
            }],
            // https://github.com/typescript-eslint/typescript-eslint/tree/master/packages/eslint-plugin
            "@typescript-eslint/tslint/config": [
                "error",
                {
                    "rules": {
                        "jsdoc-format": true,
                        "one-line": [
                            true,
                            "check-open-brace",
                            "check-whitespace"
                        ],
                        "whitespace": [
                            true,
                            "check-branch",
                            "check-decl",
                            "check-operator",
                            "check-module",
                            "check-separator",
                            "check-type"
                        ]
                    }
                }
            ]
        }
    }]
}